{"version":3,"sources":["services/FhirClient.js","components/App.js","index.js"],"names":["client","connect","a","FHIR","oauth2","ready","then","smart","Container","styled","div","Box","TextArea","textarea","App","alert","useState","setClient","patient","setPatient","useEffect","console","log","JSON","stringify","request","id","fetchData","href","rows","value","disabled","ReactDOM","render","document","getElementById"],"mappings":"mIAEIA,E,gGAYWC,EAVF,uCAAG,sBAAAC,EAAA,0DACVF,EADU,yCAELA,GAFK,gCAIPG,IAAKC,OAAOC,QAAQC,MAAK,SAACC,GAE/B,OADAP,EAASO,MALG,2CAAH,qD,iUCIb,IAAMC,EAAYC,IAAOC,IAAV,KAMTC,EAAMF,IAAOC,IAAV,KAKHE,EAAWH,IAAOI,SAAV,KAyFCC,MAlFf,WACEC,MAAO,gBADM,MAGeC,mBAAS,IAHxB,mBAGNhB,EAHM,KAGEiB,EAHF,OAIkBD,qBAJlB,mBAILE,EAJK,KAIIC,EAJJ,KA0Cb,OAvBAC,qBAAU,YACO,uCAAG,8BAAAlB,EAAA,+EAEOD,IAFP,cAERD,EAFQ,OAGdiB,EAAUjB,GACVqB,QAAQC,IAAIC,KAAKC,UAAUxB,IAJb,SAQQA,EAAOyB,QAAP,kBAA0BzB,EAAOkB,QAAQQ,KARjD,OAQRR,EARQ,OAYbC,EAAWD,GAZE,kDAgBdG,QAAQC,IAAR,MAhBc,0DAAH,qDAmBfK,KACC,IAGD,eAACnB,EAAD,WACE,eAACG,EAAD,WACE,mDACA,6CACA,+BACE,6BACE,mBAAGiB,KAAK,wGAAR,mCAKF,6BACE,mBAAGA,KAAK,wCAAR,+CAIF,6BACE,mBAAGA,KAAK,6CAAR,iCAKJ,wCACC5B,EAEC,cAACY,EAAD,CAAUiB,KAAM,GAAIC,MAAOP,KAAKC,UAAUxB,GAAS+B,UAAQ,IACzD,QAEN,yCACA,cAACpB,EAAD,UAEI,cAACC,EAAD,CACAiB,KAAM,GACNC,MAAOP,KAAKC,UAAUN,EAAS,KAAM,WClG/CH,MAAO,kBACPiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.116a3c7a.chunk.js","sourcesContent":["import FHIR from \"fhirclient\";\n//alert (\"FhirClient.js alkaa\");\nlet client;\n\nconst connect = async () => {\n  if (client) {\n    return client;\n  }\n  return FHIR.oauth2.ready().then((smart) => {\n    client = smart;\n    return client;\n  });\n};\n\nexport default connect;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport connect from \"../services/FhirClient\";\n//import FHIR from \"fhirclient\"\n/**\n * Use Styled-components to create easy styling\n * https://github.com/styled-components/styled-components\n */\nconst Container = styled.div`\n  display: flex;\n  margin: 2rem;\n  justify-content: center;\n`;\n\nconst Box = styled.div`\n  padding: 5px;\n  flex: 1;\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n`;\n\n/**\n * Functional components return JSX to render.\n */\nfunction App() {\n  alert (\"App.js alkaa\");\n\n  const [client, setClient] = useState({});\n   const [patient, setPatient] = useState();\n\n  /**\n   * useEffect is where we can make API calls\n   */\n   \n  //  FHIR.oauth2.ready()\n  //  .then(client => client.request(\"Patient\"))\n  //  .then(console.log)\n  //  .catch(console.error);\n   //alert (\"client\" + client.patient.value);\n\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const client = await connect();\n        setClient(client);\n        console.log(JSON.stringify(client));\n\n        /* Fetch the Patient and other resources here using FhirClient */\n\n        const patient = await client.request(`Patient/${client.patient.id}`);\n\n        /* use setState to store it in the component state */\n\n         setPatient(patient);\n\n         \n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Container>\n      <Box>\n        <h1>SMART on FHIR App</h1>\n        <p>Quick links:</p>\n        <ul>\n          <li>\n            <a href=\"launch.html?launch=eyJhIjoiMSIsImYiOiIxIn0&iss=https%3A%2F%2Flaunch.smarthealthit.org%2Fv%2Fr4%2Ffhir\">\n              Simulate EHR Launch\n            </a>\n          </li>\n\n          <li>\n            <a href=\"http://hl7.org/fhir/smart-app-launch/\">\n              SMART on FHIR HL7 documentation\n            </a>\n          </li>\n          <li>\n            <a href=\"https://reactjs.org/tutorial/tutorial.html\">\n              React tutorial\n            </a>\n          </li>\n        </ul>\n        <p>Client:</p>\n        {client ? (\n        \n          <TextArea rows={20} value={JSON.stringify(client)} disabled />\n        ) : null}\n      </Box>\n      <p>Patient:</p>\n      <Box>\n        {/* Render resources */}\n        { <TextArea        \n          rows={30}\n          value={JSON.stringify(patient, null, 2)}\n        /> }\n      </Box>\n    </Container>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nalert (\"index.js alkaa\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\n//ReactDOM.render(<p>hi there</p>, document.getElementById(\"root\"));\n"],"sourceRoot":""}